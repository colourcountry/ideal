Cart = {
  name="Phalanx",
  icon="1f330",
  info="a shooting game",
  api="n83"
}

messages = {
  credit="OIH 2020",
  select_mode="SELECT GAME MODE",
  clear="STAGE CLEAR",
  eaten="EATEN",
  hit="HIT",
  score="SCORE",
  hi="HI"
}

chars = {
  player="1f330",
  mob="1f47b"
}

empty = LOOP() -- convenience

Splash = MODE()
Menu = MODE()
Main = MODE()
Clear = MODE()

Blocks = MODE({ name="Blocks", parent=Main })
Missiles = MODE({ name="Missiles", parent=Main })
Deflect = MODE({ name="Deflect", parent=Main })
Invisible = MODE({ name="Invisible", parent=Main })


bg = 8
hi = 0
msg = ""

function draw_scene()
  COLOUR(7)
  for i,ent in ITEMS(bullets) do
    DRAW(ent)
  end
  COLOUR(1)
  for i,ent in ITEMS(super_bullets) do
    DRAW(ent)
  end
  if (not flags.invisible) then
    COLOUR(4)
    for i,ent in ITEMS(mobs) do
      DRAW(ent)
    end
  end
  COLOUR(0)
  DRAW(player)
end


function Cart:START()
  player = ENT(W/2, H-16, 8, chars.player)
  score = 0
  flags = {}
  mobs = empty
  bullets = empty
  super_bullets = empty
  mode_menu = MENU({
    { name= Blocks.name,  action=function() GO(Blocks) end },
    { name= Missiles.name,  action=function() GO(Missiles) end },
    { name= Deflect.name,   action=function() GO(Deflect) end },
    { name= Invisible.name, action=function() GO(Invisible) end },
    { name= "EJECT", action=EJECT }
  })
  GO(Splash)
end

function Splash:UPDATE()
  if T>50 then
    GO(Menu)
  end
end

function Splash:DRAW()
  CLS()
  COLOUR(-1)
  TITLE(UPPER(Cart.name), W/2, H/4, 0, 0)
  COLOUR(0)
  PRINT(UPPER(messages.credit), W/2, H-L, 0, 0)
end

------------------------------------------------------------------- splash

function Menu:START()
  bullets = empty
  super_bullets = empty
end

function Menu:TOUCH(x, y, isNew)
  mode_menu:touch(x, y, isNew)
end

function Menu:DRAW()
  CLS()
  draw_scene()
  mode_menu:DRAW()
  COLOUR(11)
  BLOCK(10, H/4-2*L, W-20, 5*L)
  COLOUR(-1)
  TITLE(UPPER(Cart.name), W/2, H/4, 0, 0)
  COLOUR(0)
  PRINT(messages.select_mode, W/2, H/4+2*L, 0, 0)
  BORDER(bg)
end

------------------------------------------------------------------- clear

function Clear:DRAW()
  CLS()
  draw_scene()
  draw_score()
  msg = Cart.name
  PRINT(messages.clear, W/2, H/2, 0, 0)
  if score>hi then
    hi = score
  end
end

function Clear:TOUCH(x, y, isNew)
  if isNew then
    GO(Splash)
  end
end

------------------------------------------------------------------- main

function Main:START()
  player = ENT(W/2, H-16, 8, chars.player)
  score = 0
  recoil = 0
  mobs = self.setup_mobs()
  flags = self.setup_flags()
  bullets = LOOP()
  super_bullets = LOOP()
  bg = FLR(RND(9))
end

function Main:setup_flags()
  return {}
end

function Main:setup_mobs()
  local mobs = LOOP()
  mob_dx = 1
  for i=0,4 do
    for j=0,4 do
      local ent = ENT(12+i*18,20+j*18, 8, chars.mob, j+i)
      mobs:add( ent )
    end
  end
  return mobs
end

function Main:mob_hit(m, m_rm, b, b_rm, is_super)
  m_rm()
  if not is_super then
    b_rm()
  end
  score = score + 100
end

function Main:UPDATE()
  if recoil>0 then
    recoil = recoil - 1
  end

  local reverse = false

  for i,m in ITEMS(mobs) do
    m.dx = mob_dx
    m:move()
    m.dy = 0
    if not m:is_on_screen() then
       reverse=true
    end
    if m:collides(player) then
      msg = messages.eaten
      flags.invisible = false
      GO(Splash)
    end
    if m.y>H then
      mobs:remove(i) -- managed to reach the bottom
    end
  end
  if reverse then
    mob_dx = -mob_dx
    for i,m in ITEMS(mobs) do
      m.dy = 10
    end
  end

  for bi,b in ITEMS(bullets) do
    if not b:is_on_screen() then
      if flags.deflect then
        b.dy = -b.dy
        super_bullets:add(b)
      end
      bullets:remove(bi)
    end
    b:move()

    for mi,m in ITEMS(mobs) do
      if b:collides(m) then
        self:mob_hit(
          m,
          function() mobs:remove(mi) end,
          b,
          function() bullets:remove(bi) end,
          false
        )
      end
    end
  end

  for bi, b in ITEMS(super_bullets) do
    b:move()
    if not b:is_on_screen() then
      b_rm()
    end
    for mi, m in ITEMS(mobs) do
      if b:collides(m) then
        self:mob_hit(
          m,
          function() mobs.remove(mi) end,
          b,
          function() super_bullets.remove(bi) end,
          true
        )
      end
    end
    if b:collides(player) then
      msg = messages.hit
      flags.invisible = false
      GO(Splash)
    end
  end

  if (mobs.length==0) then
    GO(Clear)
  end
end

function draw_score()
  COLOUR(0)
  PRINT(messages.score, W/4, 0, 0, -1)
  PRINT(score, W/4, L, 0, -1)
  draw_hiscore()
end

function draw_hiscore()
  COLOUR(0)
  PRINT(messages.hi, 3*W/4, 0, 0, -1)
  PRINT(hi, 3*W/4, L, 0, -1)
end

function Main:DRAW()
  BORDER(bg)
  CLS(bg)
  COLOUR(0,bg)
  draw_score()
  draw_scene()
end

function Main:TOUCH(x, y, isNew)
  CLS(bg)
  local dx, dy, d = DIRECTION(x-player.x, y-player.y)
  local ox = player.x
  local pdx = MIN(d/10,3)
  local pdy = 0
  player.x = player.x + pdx*dx
  player.y = player.y + pdy*dy
  if (not player:is_on_screen()) then
    player.x = ox
  end

  if (recoil>0) then
    return
  end
  score = MAX(0, score-10)
  recoil=10
  local b = ENT(player.x, player.y-player.r, 4, "1f538")
  b.dx = pdx*dx
  b.dy = -1
  bullets:add(b)
end

------------------------------------------------------------------- invisible

function Invisible:setup_flags()
  return {invisible=true}
end

------------------------------------------------------------------- deflect

function Deflect:setup_flags()
  return {deflect=true}
end

function Deflect:mob_hit(m, m_rm, b, b_rm, is_super)
  m_rm()
  local r, th = POLAR(b.x, b.y, m.x, m.y)
  local q = FLR((th+45)/90)
  if q%2 == 0 then
    if not is_super then
      b.dx = -b.dx
    end
  else
    b.dy = -b.dy
  end
  if not is_super then
    super_bullets:add(b)
    b_rm()
  end
  score = score + 100
end

return Cart
