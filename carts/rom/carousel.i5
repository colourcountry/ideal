DATA_LEAK_TEST = "leaking"

messages = {
  select="SELECT CARTRIDGE",
  select_episode = "SELECT EPISODE",
  no_carts="NO CARTRIDGES"
}

Main = MODE("Main")

function Main:START(secrets)
  if not secrets then
    ERROR("Can't run carousel directly")
  end

  games = {}
  gameNames = {}

  quit = secrets.quit
  LOG("Carousel starting. Carts available are:")
  for k,v in ITEMS(secrets.carts) do
    LOG(k,v)
    if games[v.name] then
      games[v.name].single=false
    else
      games[v.name] = {
        id=k,
        name=v.name,
        icon=v.icon or 0x10008,
        icon_tint=v.icon_tint,
        single=true,
        episodes = {}
      }
      gameNames[#gameNames+1] = v.name
    end

    games[v.name].episodes[v.episode or 1] = {
      name=v.episode_name or v.episode or "",
      icon_tint=v.icon_tint,
      action=function() secrets.switch_cart(k) end
    }
  end
  LOG("Found ",#gameNames," games")
  SORT(gameNames)

  cartItems = {}
  for i=1,#gameNames do
    local g = games[gameNames[i]]
    local action
    LOG(g)
    if g.single then
      action = g.episodes[1].action
    else
      local seps,meps = {}, {}
      for k,_ in ITEMS(g.episodes) do
        seps[#seps+1] = k
      end
      SORT(seps)
      for e=1,#seps do
        meps[e] = g.episodes[seps[e]]
      end
      local ep_menu = MENU(meps,1)
      action = function()
        cur_menu = ep_menu
        cur_msg = messages.select_episode
        cur_title = gameNames[i]
      end
    end

    cartItems[i] = {
      id = g.id,
      name = g.name,
      icon = g.icon,
      icon_tint = g.icon_tint,
      action = action
    }
  end

  main_menu = MENU(cartItems)
  cur_menu = main_menu
  cur_msg = messages.select
  cur_title = MODEL
end

function Main:UPDATE()
  if (#cartItems==0) then
    --ERROR(messages.no_carts)
    return
  end
end

function Main:DRAW()
  CLS()
  TWINKLE()
  TITLE(cur_title, W/2, 24, 0, 0)
  COLOUR(13)
  PRINT(cur_msg, W/2, 40, 0, 0)
  DRAW(cur_menu)
end

function Main:TOUCH(x,y)
  cur_menu:handle_touch(x, y)
end

function Main:DRAG(ox,oy,x,y)
  cur_menu:handle_drag(ox,oy,x,y)
end

function Main:RELEASE(ox,oy,x,y)
  cur_menu:handle_release(ox,oy,x,y)
end

return {
  name="rom/carousel",
  api="i5",
  start=Main,
  SHUTDOWN=function() if quit then quit() end end
}
